$default-gutter: 2.5rem;

@mixin clearfix {
  overflow: hidden;
  &::before, &::after {
    content: '';
    display: table;
  }
  &::after {
    clear: both;
  }
}

$breakpoint-phone-only: 600px;
$breakpoint-tablet-portrait: 900px;
$breakpoint-tablet-landscape: 1024px;
$breakpoint-desktop: 1200px;
$breakpoint-xl: 1600px;
$breakpoint-xxl: 1800px;

@mixin media-query-max($breakpoint) {
  @media (max-width: $breakpoint) { @content; }
}
@mixin media-query-min($breakpoint) {
  @media (min-width: $breakpoint) { @content; }
}
@mixin media-query-range($min, $max) {
  @media (min-width: $min) and (max-width: $max) { @content; }
}

@mixin center-block {
  margin-left: auto;
  margin-right: auto;
}

@mixin flex-container ($direction: row, $align: center) {
  display: flex;
  flex-direction: $direction;
  flex-wrap: if($direction == row, wrap, nowrap);
  align-items: $align;
}

@mixin center-vertical {
  top: 50%;
  transform: translateY(-50%);
}
@mixin center-horizontal {
  left: 50%;
  transform: translateX(-50%);
}

@mixin transition($prop: all, $timing: .3s, $easing: ease-in-out) {
  transition: $prop $timing $easing;
}

@mixin fullscreen {
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
}

@mixin icon-button {
  @include normalize-button;
  padding: 0;
  margin: 0;
  width: 20px;
  min-width: 0;
  height: 20px;
  position: relative;
  > svg {
    width: 100%;
    height: 100%;
    top: 0;
    left: 0;
  }
}

@function inner-gutter($gutter) {
  @return $gutter / 2;
}

@function outer-gutter($gutter) {
  @return $gutter / 4;
}
@mixin container-division($divisions: 1, $container-portion: 1, $gutter: $default-gutter, $resize: true) {
  $calculated-width: (100% / $divisions) * $container-portion;
  $calculated-phone-width: if($gutter == 0, 100%, calc(100% - #{$gutter}));
  min-width: if($gutter == 0, $calculated-width, calc(#{$calculated-width} - #{$gutter}));
  max-width: if($gutter == 0, $calculated-width, calc(#{$calculated-width} - #{$gutter}));
  margin: if($gutter > 0, inner-gutter($gutter), $gutter);
  @if ($divisions > 1 and $resize == true) {
    @include media-query-max($breakpoint-phone-only) {
      width: $calculated-phone-width;
      min-width: $calculated-phone-width;
      max-width: $calculated-phone-width;
    }
  }
}

@mixin grid-division($divisions: 4, $gutter: $default-gutter) {
  $calculated-width: (100% / $divisions);
  min-width: if($gutter == 0, $calculated-width, calc(#{$calculated-width} - #{inner-gutter($gutter) * 2}));
  max-width: if($gutter == 0, $calculated-width, calc(#{$calculated-width} - #{inner-gutter($gutter) * 2}));
  margin: inner-gutter($gutter);
}
